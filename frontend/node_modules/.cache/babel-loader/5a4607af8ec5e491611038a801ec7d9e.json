{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\ScrollableChat.js\";\nimport React from 'react';\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender } from '../config/chatLogics';\nimport { ChatState } from '../Context/ChatProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollableChat = _ref => {\n  let {\n    messages\n  } = _ref;\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n    children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [(isSameSender(messages, m, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: m.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: m.sender.name,\n          src: m.sender.pic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n          marginLeft: isSameSenderMargin(messages, m, i, user._id),\n          marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\"\n        },\n        children: m.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, m._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ScrollableChat;\nexport default ScrollableChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/ScrollableChat.js"],"names":["React","ScrollableFeed","isLastMessage","isSameSender","ChatState","ScrollableChat","messages","user","map","m","i","display","_id","sender","name","pic","backgroundColor","marginLeft","isSameSenderMargin","marginTop","isSameUser","borderRadius","padding","maxWidth","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,sBAA5C;AACA,SAASC,SAAT,QAA0B,yBAA1B;;;AAEA,MAAMC,cAAc,GAAG,QAAmB;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AAEF,sBACE,QAAC,cAAD;AAAA,cACKE,QAAQ,IACTA,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACX;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,iBACG,CAACR,YAAY,CAACG,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACK,GAAtB,CAAZ,IACAV,aAAa,CAACI,QAAD,EAAWI,CAAX,EAAcH,IAAI,CAACK,GAAnB,CADd,kBAEC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASC,IAAzB;AAA+B,QAAA,SAAS,EAAC,cAAzC;AAAwD,QAAA,QAAQ,MAAhE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,MAAM,EAAC,SAJT;AAKE,UAAA,IAAI,EAAEL,CAAC,CAACI,MAAF,CAASC,IALjB;AAME,UAAA,GAAG,EAAEL,CAAC,CAACI,MAAF,CAASE;AANhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAcE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAG,GAChBP,CAAC,CAACI,MAAF,CAASD,GAAT,KAAiBL,IAAI,CAACK,GAAtB,GAA4B,SAA5B,GAAwC,SACzC,EAHI;AAILK,UAAAA,UAAU,EAAEC,kBAAkB,CAACZ,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACK,GAAtB,CAJzB;AAKLO,UAAAA,SAAS,EAAEC,UAAU,CAACd,QAAD,EAAWG,CAAX,EAAcC,CAAd,EAAiBH,IAAI,CAACK,GAAtB,CAAV,GAAuC,CAAvC,GAA2C,EALjD;AAMLS,UAAAA,YAAY,EAAE,MANT;AAOLC,UAAAA,OAAO,EAAE,UAPJ;AAQLC,UAAAA,QAAQ,EAAE;AARL,SADT;AAAA,kBAYGd,CAAC,CAACe;AAZL;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA,OAAsCf,CAAC,CAACG,GAAxC;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAxCD;;KAAMP,c;AA0CN,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\nimport ScrollableFeed from \"react-scrollable-feed\";\r\nimport { isLastMessage, isSameSender } from '../config/chatLogics';\r\nimport { ChatState } from '../Context/ChatProvider';\r\n\r\nconst ScrollableChat = ({ messages })  => {\r\n    const { user } = ChatState();\r\n\r\n  return (\r\n    <ScrollableFeed>\r\n        {messages &&\r\n        messages.map((m, i) => (\r\n          <div style={{ display: \"flex\" }} key={m._id}>\r\n            {(isSameSender(messages, m, i, user._id) ||\r\n              isLastMessage(messages, i, user._id)) && (\r\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\r\n                <Avatar\r\n                  mt=\"7px\"\r\n                  mr={1}\r\n                  size=\"sm\"\r\n                  cursor=\"pointer\"\r\n                  name={m.sender.name}\r\n                  src={m.sender.pic}\r\n                />\r\n              </Tooltip>\r\n            )}\r\n            <span\r\n              style={{\r\n                backgroundColor: `${\r\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\r\n                }`,\r\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\r\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\r\n                borderRadius: \"20px\",\r\n                padding: \"5px 15px\",\r\n                maxWidth: \"75%\",\r\n              }}\r\n            >\r\n              {m.content}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      \r\n    </ScrollableFeed>\r\n  )\r\n}\r\n\r\nexport default ScrollableChat\r\n"]},"metadata":{},"sourceType":"module"}