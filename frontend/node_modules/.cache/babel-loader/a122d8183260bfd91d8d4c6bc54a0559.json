{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\authentication\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport { FormControl, FormLabel, VStack, Input, InputGroup, InputRightElement, Button } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useToast } from '@chakra-ui/react';\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setconfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n  const toast = useToast();\n  const history = useHistory();\n\n  const handleClick = () => setShow(!show);\n\n  const postDetails = pics => {\n    setPicLoading(true);\n\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n\n    console.log(pics);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"CHATAPP\");\n      data.append(\"cloud_name\", \"dz1gdhrfv\");\n      fetch(\"https://api.cloudinary.com/v1_1/dz1gdhrfv/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n        console.log(data.url.toString());\n        setPicLoading(false);\n      }).catch(err => {\n        console.log(err);\n        setPicLoading(false);\n      });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setPicLoading(false);\n      return;\n    }\n\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords dont match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/user\", {\n        name,\n        email,\n        password,\n        pic\n      }, config);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setPicLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5px\",\n    color: \"black\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      isRequired: true,\n      id: \"FirstName\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Your Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      isRequired: true,\n      id: \"FirstName\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Your Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      isRequired: true,\n      id: \"FirstName\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Enter Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      isRequired: true,\n      id: \"FirstName\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Confirm Password\",\n          onChange: e => setconfirmpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"pic\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Upload your Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"file\",\n        p: 1.5,\n        accept: \"image/*\",\n        onChange: e => postDetails(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      width: \"100%\",\n      style: {\n        marginTop: 15\n      },\n      onClick: submitHandler,\n      isLoading: picLoading,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"HUlbrUlFwyTfX9LAhzCfqZma+kQ=\", false, function () {\n  return [useToast, useHistory];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/authentication/Signup.js"],"names":["FormControl","FormLabel","VStack","Input","InputGroup","InputRightElement","Button","React","useState","useToast","axios","useHistory","Signup","show","setShow","name","setName","email","setEmail","confirmpassword","setconfirmpassword","password","setPassword","pic","setPic","picLoading","setPicLoading","toast","history","handleClick","postDetails","pics","undefined","title","status","duration","isClosable","position","console","log","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","submitHandler","config","headers","post","localStorage","setItem","JSON","stringify","push","error","description","response","message","e","target","value","files","marginTop"],"mappings":"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","sourcesContent":["import { FormControl, FormLabel, VStack,Input, InputGroup,InputRightElement,Button } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { useToast } from '@chakra-ui/react'\r\nimport axios from \"axios\"\r\nimport {useHistory} from \"react-router-dom\"\r\nconst Signup = () => {\r\n    const [show,setShow] = useState(false);\r\n    const [name,setName] = useState();\r\n    const [email,setEmail] = useState();\r\n    const [confirmpassword,setconfirmpassword] = useState();\r\n    const [password,setPassword] = useState();\r\n    const [pic,setPic] = useState();\r\n    const [picLoading, setPicLoading] = useState(false);\r\n    const toast = useToast()\r\n    const history = useHistory();\r\n    const handleClick = () => setShow(!show);\r\n\r\n    const postDetails = (pics) => {\r\n      setPicLoading(true);\r\n      if (pics === undefined) {\r\n        toast({\r\n          title: \"Please Select an Image!\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        return;\r\n      }\r\n      console.log(pics);\r\n      if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n        const data = new FormData();\r\n        data.append(\"file\", pics);\r\n        data.append(\"upload_preset\", \"CHATAPP\");\r\n        data.append(\"cloud_name\", \"dz1gdhrfv\");\r\n        fetch(\"https://api.cloudinary.com/v1_1/dz1gdhrfv/image/upload\", {\r\n          method: \"post\",\r\n          body: data,\r\n        })\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n            setPic(data.url.toString());\r\n            console.log(data.url.toString());\r\n            setPicLoading(false);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n            setPicLoading(false);\r\n          });\r\n      } else {\r\n        toast({\r\n          title: \"Please Select an Image!\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setPicLoading(false);\r\n        return;\r\n      }\r\n    };\r\n  \r\n  \r\n    const submitHandler = async () => {\r\n      setPicLoading(true);\r\n      if (!name || !email || !password || !confirmpassword) {\r\n        toast({\r\n          title: \"Please Fill all the Feilds\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setPicLoading(false);\r\n        return;\r\n      }\r\n      if (password  !== confirmpassword) {\r\n        toast({\r\n          title: \"Passwords dont match\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        };\r\n        const { data } = await axios.post(\r\n          \"/api/user\",\r\n          {\r\n               name,\r\n               email,\r\n               password,\r\n               pic,\r\n          },\r\n          config\r\n        );\r\n\r\n        toast({\r\n          title: \"Registration Successful\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n        setPicLoading(false);\r\n        history.push(\"/chats\");\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: error.response.data.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setPicLoading(false);\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      <FormControl isRequired id='FirstName'>\r\n          <FormLabel>Name</FormLabel>\r\n          <Input placeholder='Enter Your Name' \r\n          onChange={(e) => setName(e.target.value)}></Input>\r\n      </FormControl>\r\n\r\n      <FormControl isRequired id='FirstName'>\r\n          <FormLabel>Email</FormLabel>\r\n          <Input placeholder='Enter Your Email' \r\n          onChange={(e) => setEmail(e.target.value)}></Input>\r\n      </FormControl>\r\n\r\n      <FormControl isRequired id='FirstName'>\r\n          <FormLabel>Password</FormLabel>\r\n          <InputGroup>\r\n          <Input type={show ? \"text\" : \"password\"} placeholder='Enter Password' \r\n          onChange={(e) => setPassword(e.target.value)}></Input>\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          \r\n      </FormControl>\r\n      <FormControl isRequired id='FirstName'>\r\n          <FormLabel>Confirm Password</FormLabel>\r\n          <InputGroup>\r\n          <Input type={show ? \"text\" : \"password\"} placeholder='Confirm Password' \r\n          onChange={(e) => setconfirmpassword(e.target.value)}></Input>\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          \r\n      </FormControl>\r\n\r\n      <FormControl id=\"pic\">\r\n        <FormLabel>Upload your Picture</FormLabel>\r\n        <Input\r\n          type=\"file\"\r\n          p={1.5}\r\n          accept=\"image/*\"\r\n          onChange={(e) => postDetails(e.target.files[0])}\r\n        />\r\n      </FormControl>\r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n        isLoading = {picLoading}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n    </VStack>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n"]},"metadata":{},"sourceType":"module"}