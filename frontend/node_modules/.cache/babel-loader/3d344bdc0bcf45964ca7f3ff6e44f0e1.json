{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\miscellanious\\\\GroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, FormControl, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport axios from \"axios\";\nimport UserListItem from \"../userAvatar/userListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupChatModal = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const {\n    user,\n    chats,\n    setChats\n  } = ChatState();\n\n  const handleSearch = async query => {\n    setSearch(query);\n    if (!query) return;\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  const handleSubmit = () => {};\n\n  const handleGroup = usertoAdd => {\n    if (selectedUsers.includes(usertoAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, usertoAdd]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onOpen,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: \"Create Group CHat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          d: \"flex\",\n          flexDir: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add Users eg: John, Piyush, Jane\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : //display lesser so as to resuce the size of list\n          searchResult === null || searchResult === void 0 ? void 0 : searchResult.slice(0, 4).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n            user: user,\n            handleFunction: () => handleGroup(user) // add it the to selected user array\n\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            onClick: handleSubmit,\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GroupChatModal, \"PHSzC1yTrtxvyG3eWGbgwqRvKTk=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = GroupChatModal;\nexport default GroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupChatModal\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/miscellanious/GroupChatModal.js"],"names":["React","useState","Button","FormControl","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","useToast","ChatState","axios","UserListItem","GroupChatModal","children","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","user","chats","setChats","handleSearch","query","config","headers","Authorization","token","data","get","console","log","error","title","description","status","duration","isClosable","position","handleSubmit","handleGroup","usertoAdd","includes","e","target","value","slice","map","_id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {Button, FormControl, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast,} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport axios from \"axios\";\r\nimport UserListItem from \"../userAvatar/userListItem\";\r\n\r\n\r\n\r\n\r\nconst GroupChatModal = ({children}) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n\r\n  const toast = useToast();\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleSearch =async (query) => {\r\n     setSearch(query);\r\n     if(!query)return ;\r\n\r\n     try{\r\n        setLoading(true);\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n\r\n      console.log(data);\r\n      setLoading(false);\r\n      setSearchResult(data);\r\n     }catch(error){\r\n        toast({\r\n            title: \"Error Occured!\",\r\n            description: \"Failed to Load the Search Results\",\r\n            status: \"error\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n            position: \"bottom-left\",\r\n          });\r\n        }\r\n     }\r\n  \r\n  const handleSubmit =() => {\r\n\r\n}\r\nconst handleGroup =(usertoAdd) => {\r\n    if (selectedUsers.includes(usertoAdd)) {\r\n        toast({\r\n          title: \"User already added\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      setSelectedUsers([...selectedUsers, usertoAdd]);\r\n}\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n      \r\n       \r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n          fontSize=\"35px\"\r\n          fontFamily=\"Work sans\"\r\n          d=\"flex\"\r\n          justifyContent=\"center\">Create Group CHat</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody  d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n          <FormControl>\r\n              <Input placeholder=\"Chat Name\"mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            {/* slected Users */}\r\n            {loading ? (\r\n              <div>Loading...</div>\r\n            ) : (\r\n                //display lesser so as to resuce the size of list\r\n              searchResult?.slice(0, 4).map((user) => (\r\n                  <UserListItem key={user._id}\r\n                    user={user}\r\n                    handleFunction={() => handleGroup(user)}\r\n                    // add it the to selected user array\r\n                  />\r\n                ))\r\n            )}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme='blue'  onClick={handleSubmit}>\r\n              Create Chat\r\n            </Button>\r\n            \r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default GroupChatModal\r\n"]},"metadata":{},"sourceType":"module"}