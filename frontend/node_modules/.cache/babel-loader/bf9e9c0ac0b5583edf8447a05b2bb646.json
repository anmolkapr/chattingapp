{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\MyChats.js\",\n    _s = $RefreshSig$();\n\nimport { Box, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { ChatState } from '../Context/ChatProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyChats = () => {\n  _s();\n\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n      console.log(data);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    d: {\n      base: selectedChat ? \"none\" : \"flex\",\n      md: \"flex\"\n    },\n    flexDir: \"column\",\n    alignItems: \"center\",\n    p: 3,\n    bg: \"white\",\n    w: {\n      base: \"100%\",\n      md: \"31%\"\n    },\n    borderRadius: \"lg\",\n    borderWidth: \"1px\",\n    Box: true,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      pb: 3,\n      px: 3,\n      fontSize: {\n        base: \"28px\",\n        md: \"30px\"\n      },\n      fontFamily: \"Work sans\",\n      d: \"flex\",\n      w: \"100%\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyChats, \"YQd3AWel/HFwk7lFM1/6tXxZbeA=\", false, function () {\n  return [useToast];\n});\n\n_c = MyChats;\nexport default MyChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/MyChats.js"],"names":["Box","useToast","axios","React","useEffect","useState","ChatState","MyChats","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","toast","fetchChats","config","headers","Authorization","token","data","get","console","log","error","title","description","status","duration","isClosable","position","JSON","parse","localStorage","getItem","base","md"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,EAA5C;AACA,QAAM;AAAEK,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA,IAAjC;AAAuCC,IAAAA,KAAvC;AAA8CC,IAAAA;AAA9C,MAA2DR,SAAS,EAA1E;AACA,QAAMS,KAAK,GAAGd,QAAQ,EAAtB;;AAEA,QAAMe,UAAU,GAAG,YAAY;AAC7B;AACA,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASP,IAAI,CAACQ,KAAM;AAD7B;AADI,OAAf;AAMA,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMnB,KAAK,CAACoB,GAAN,CAAU,WAAV,EAAuBL,MAAvB,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACD,KAVD,CAUE,OAAOI,KAAP,EAAc;AACdV,MAAAA,KAAK,CAAC;AACJW,QAAAA,KAAK,EAAE,gBADH;AAEJC,QAAAA,WAAW,EAAE,0BAFT;AAGJC,QAAAA,MAAM,EAAE,OAHJ;AAIJC,QAAAA,QAAQ,EAAE,IAJN;AAKJC,QAAAA,UAAU,EAAE,IALR;AAMJC,QAAAA,QAAQ,EAAE;AANN,OAAD,CAAL;AAQD;AACF,GAtBD;;AAwBA3B,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,CAACuB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAAb;AACAnB,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,QAAC,GAAD;AACA,IAAA,CAAC,EAAE;AAAEoB,MAAAA,IAAI,EAAE1B,YAAY,GAAG,MAAH,GAAY,MAAhC;AAAwC2B,MAAAA,EAAE,EAAE;AAA5C,KADH;AAEA,IAAA,OAAO,EAAC,QAFR;AAGA,IAAA,UAAU,EAAC,QAHX;AAIA,IAAA,CAAC,EAAE,CAJH;AAKA,IAAA,EAAE,EAAC,OALH;AAMA,IAAA,CAAC,EAAE;AAAED,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,EAAE,EAAE;AAApB,KANH;AAOA,IAAA,YAAY,EAAC,IAPb;AAQA,IAAA,WAAW,EAAC,KARZ;AAUF,IAAA,GAAG,MAVD;AAAA,2BAWC,QAAC,GAAD;AACG,MAAA,EAAE,EAAE,CADP;AAEG,MAAA,EAAE,EAAE,CAFP;AAGG,MAAA,QAAQ,EAAE;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OAHb;AAIG,MAAA,UAAU,EAAC,WAJd;AAKG,MAAA,CAAC,EAAC,MALL;AAMG,MAAA,CAAC,EAAC,MANL;AAOG,MAAA,cAAc,EAAC,eAPlB;AAQG,MAAA,UAAU,EAAC;AARd;AAAA;AAAA;AAAA;AAAA;AAXD;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAzDD;;GAAM9B,O;UAGUN,Q;;;KAHVM,O;AA2DN,eAAeA,OAAf","sourcesContent":["import { Box, useToast } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ChatState } from '../Context/ChatProvider';\r\n\r\nconst MyChats = () => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n  const toast = useToast();\r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n   \r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n    d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n    flexDir=\"column\"\r\n    alignItems=\"center\"\r\n    p={3}\r\n    bg=\"white\"\r\n    w={{ base: \"100%\", md: \"31%\" }}\r\n    borderRadius=\"lg\"\r\n    borderWidth=\"1px\"\r\n  \r\n  Box>\r\n     <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      ></Box></Box>\r\n  )\r\n}\r\n\r\nexport default MyChats\r\n"]},"metadata":{},"sourceType":"module"}