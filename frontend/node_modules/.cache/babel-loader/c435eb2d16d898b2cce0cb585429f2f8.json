{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\singleChats.js\";\nimport { ArrowBackIcon } from '@chakra-ui/icons';\nimport { Box, IconButton, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { getSender, getSenderFull } from '../config/chatLogics';\nimport { ChatState } from '../Context/ChatProvider';\nimport ProfileModal from './miscellanious/ProfileModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst singleChats = _ref => {\n  let {\n    setFetchAgain,\n    fetchAgain\n  } = _ref;\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          d: {\n            base: \"flex\",\n            md: \"none\"\n          },\n          icon: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this),\n          onClick: () => setSelectedChat(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", getSender(user, selectedChat.users), /*#__PURE__*/_jsxDEV(ProfileModal, {\n            user: getSenderFull(user, selectedChat.users)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: selectedChat.chatName.toUpperCase()\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        pb: 3,\n        fontFamily: \"Work sans\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default singleChats;","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/singleChats.js"],"names":["ArrowBackIcon","Box","IconButton","Text","React","getSender","getSenderFull","ChatState","ProfileModal","singleChats","setFetchAgain","fetchAgain","user","selectedChat","setSelectedChat","base","md","isGroupChat","users","chatName","toUpperCase"],"mappings":";AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAmBC,aAAnB,QAAwC,sBAAxC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;;AAEA,MAAMC,WAAW,GAAG,QAAgC;AAAA,MAA/B;AAACC,IAAAA,aAAD;AAAeC,IAAAA;AAAf,GAA+B;AAEhD,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,YAAN;AAAmBC,IAAAA;AAAnB,MAAsCP,SAAS,EAArD;AACF,sBACE;AAAA,cACGM,YAAY,gBACZ;AAAA,6BACD,QAAC,IAAD;AACE,QAAA,QAAQ,EAAE;AAAEE,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,EAAE,EAAE;AAApB,SADZ;AAEE,QAAA,EAAE,EAAE,CAFN;AAES,QAAA,EAAE,EAAE,CAFb;AAEgB,QAAA,CAAC,EAAC,MAFlB;AAGE,QAAA,UAAU,EAAC,WAHb;AAIE,QAAA,CAAC,EAAC,MAJJ;AAKE,QAAA,cAAc,EAAE;AAAED,UAAAA,IAAI,EAAE;AAAR,SALlB;AAME,QAAA,UAAU,EAAC,QANb;AAAA,gCAQI,QAAC,UAAD;AACI,UAAA,CAAC,EAAE;AAAEA,YAAAA,IAAI,EAAE,MAAR;AAAgBC,YAAAA,EAAE,EAAE;AAApB,WADP;AAEI,UAAA,IAAI,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAFV;AAGI,UAAA,OAAO,EAAE,MAAMF,eAAe,CAAC,EAAD;AAHlC;AAAA;AAAA;AAAA;AAAA,gBARJ,EAaK,CAACD,YAAY,CAACI,WAAd,gBACA;AAAA,0BAAIZ,SAAS,CAACO,IAAD,EAAOC,YAAY,CAACK,KAApB,CAAb,eACD,QAAC,YAAD;AACU,YAAA,IAAI,EAAEZ,aAAa,CAACM,IAAD,EAAOC,YAAY,CAACK,KAApB;AAD7B;AAAA;AAAA;AAAA;AAAA,kBADC;AAAA,wBADA,gBAKC;AAAA,oBAAGL,YAAY,CAACM,QAAb,CAAsBC,WAAtB;AAAH,yBAlBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADC,qBADY,gBA+BX,QAAC,GAAD;AAAK,MAAA,CAAC,EAAC,MAAP;AAAc,MAAA,UAAU,EAAC,QAAzB;AAAkC,MAAA,cAAc,EAAC,QAAjD;AAA0D,MAAA,CAAC,EAAC,MAA5D;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,KAAf;AAAqB,QAAA,EAAE,EAAE,CAAzB;AAA4B,QAAA,UAAU,EAAC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAhCJ,mBADF;AAyCD,CA5CD;;AA8CA,eAAeX,WAAf","sourcesContent":["import { ArrowBackIcon } from '@chakra-ui/icons';\r\nimport { Box, IconButton, Text } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { getSender,getSenderFull } from '../config/chatLogics';\r\nimport { ChatState } from '../Context/ChatProvider'\r\nimport ProfileModal from './miscellanious/ProfileModal';\r\n\r\nconst singleChats = ({setFetchAgain,fetchAgain}) => {\r\n\r\n    const {user,selectedChat,setSelectedChat} = ChatState();\r\n  return (\r\n    <>\r\n      {selectedChat?\r\n      (<>\r\n      <Text\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        pb={3} px={2} w=\"100%\"\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        justifyContent={{ base: \"space-between\" }}\r\n        alignItems=\"center\"\r\n      >\r\n          <IconButton\r\n              d={{ base: \"flex\", md: \"none\" }}\r\n              icon={<ArrowBackIcon />}\r\n              onClick={() => setSelectedChat(\"\")}\r\n            />\r\n          {!selectedChat.isGroupChat?\r\n          (<> {getSender(user, selectedChat.users)}\r\n          <ProfileModal\r\n                    user={getSenderFull(user, selectedChat.users)}\r\n                  /></>):(\r\n            <>{selectedChat.chatName.toUpperCase()}\r\n            {/* <UpdateGroupChatModal\r\n                    fetchMessages={fetchMessages}\r\n                    fetchAgain={fetchAgain}\r\n                    setFetchAgain={setFetchAgain}\r\n            /> */}\r\n            </>\r\n          )}\r\n            </Text>\r\n      </>):\r\n      (\r\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\r\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\r\n            Click on a user to start chatting\r\n          </Text>\r\n\r\n        </Box>)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default singleChats\r\n"]},"metadata":{},"sourceType":"module"}