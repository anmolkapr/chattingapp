{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\authentication\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [Loading, setLoading] = useState(false);\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setLoading(true);\n\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setLoading(false);\n      return;\n    } // console.log(email, password);\n\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/user/login\", {\n        email,\n        password\n      }, config); // console.log(JSON.stringify(data));\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5px\",\n    color: \"black\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      isRequired: true,\n      id: \"FirstName\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Your Email\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      isRequired: true,\n      id: \"FirstName\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Enter Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"blue\",\n      width: \"100%\",\n      style: {\n        marginTop: 15\n      },\n      onClick: submitHandler,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      colorScheme: \"red\",\n      width: \"100%\",\n      onClick: () => {\n        setEmail(\"guest@example.com\");\n        setPassword(\"123456\");\n      },\n      children: \"Get Guest User Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"IBAcxFCxr1+MLSlw7pMjNfdiwOc=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/authentication/Login.js"],"names":["Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","VStack","React","useState","Login","show","setShow","name","setName","email","setEmail","password","setPassword","Loading","setLoading","handleClick","submitHandler","toast","title","status","duration","isClosable","position","config","headers","data","axios","post","localStorage","setItem","JSON","stringify","history","push","error","description","response","message","e","target","value","marginTop"],"mappings":"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","sourcesContent":["import { Button, FormControl, FormLabel, Input, InputGroup, InputRightElement, VStack } from '@chakra-ui/react';\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst Login = () => {\r\n  const [show,setShow] = useState(false);\r\n    const [name,setName] = useState();\r\n    const [email,setEmail] = useState();\r\n    const [password,setPassword] = useState();\r\n    const [Loading, setLoading] = useState(false);\r\n\r\n    const handleClick = () => setShow(!show);\r\n\r\n  \r\n\r\n    const submitHandler = async () => {\r\n      setLoading(true);\r\n      if (!email || !password) {\r\n        toast({\r\n          title: \"Please Fill all the Feilds\",\r\n          status: \"warning\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n  \r\n      // console.log(email, password);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        };\r\n  \r\n        const { data } = await axios.post(\r\n          \"/api/user/login\",\r\n          { email, password },\r\n          config\r\n        );\r\n  \r\n        // console.log(JSON.stringify(data));\r\n        toast({\r\n          title: \"Login Successful\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n        setLoading(false);\r\n        history.push(\"/chats\");\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: error.response.data.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom\",\r\n        });\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n\r\n  return (\r\n    <VStack spacing=\"5px\" color=\"black\">\r\n      \r\n\r\n      <FormControl isRequired id='FirstName'>\r\n          <FormLabel>Email</FormLabel>\r\n          <Input placeholder='Enter Your Email' \r\n          onChange={(e) => setEmail(e.target.value)}></Input>\r\n      </FormControl>\r\n\r\n      <FormControl isRequired id='FirstName'>\r\n          <FormLabel>Password</FormLabel>\r\n          <InputGroup>\r\n          <Input type={show ? \"text\" : \"password\"} placeholder='Enter Password' \r\n          onChange={(e) => setPassword(e.target.value)}></Input>\r\n          <InputRightElement width=\"4.5rem\">\r\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\r\n              {show ? \"Hide\" : \"Show\"}\r\n            </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          \r\n      </FormControl>\r\n      \r\n\r\n      <Button\r\n        colorScheme=\"blue\"\r\n        width=\"100%\"\r\n        style={{ marginTop: 15 }}\r\n        onClick={submitHandler}\r\n      >\r\n        Log in\r\n      </Button>\r\n      <Button\r\n        variant=\"solid\"\r\n        colorScheme=\"red\"\r\n        width=\"100%\"\r\n        onClick={() => {\r\n          setEmail(\"guest@example.com\");\r\n          setPassword(\"123456\");\r\n        }}\r\n      >\r\n        Get Guest User Credentials\r\n      </Button>\r\n    </VStack>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}