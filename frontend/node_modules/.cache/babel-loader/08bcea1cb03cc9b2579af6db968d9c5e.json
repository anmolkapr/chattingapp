{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\miscellanious\\\\GroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, FormControl, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from \"@chakra-ui/react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupChatModal = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const {\n    user,\n    chats,\n    setChats\n  } = ChatState();\n\n  const handleSearch = query => {\n    setSearch(query);\n    if (!query) return;\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n    } catch (error) {}\n  };\n\n  const handleSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: onOpen,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: \"Create Group CHat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          d: \"flex\",\n          flexDir: \"column\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add Users eg: John, Piyush, Jane\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            onClick: handleSubmit,\n            children: \"Create Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GroupChatModal, \"PHSzC1yTrtxvyG3eWGbgwqRvKTk=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = GroupChatModal;\nexport default GroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupChatModal\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/miscellanious/GroupChatModal.js"],"names":["React","useState","Button","FormControl","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","useToast","ChatState","GroupChatModal","children","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","user","chats","setChats","handleSearch","query","config","headers","Authorization","token","error","handleSubmit","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport {Button, FormControl, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast,} from \"@chakra-ui/react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nconst GroupChatModal = ({children}) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [groupChatName, setGroupChatName] = useState();\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n  const { user, chats, setChats } = ChatState();\r\n\r\n  const handleSearch =(query) => {\r\n     setSearch(query);\r\n     if(!query)return ;\r\n\r\n     try{\r\n        setLoading(true);\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        };\r\n     }catch(error){}\r\n  }\r\n  const handleSubmit =() => {\r\n\r\n}\r\n\r\n  return (\r\n    <>\r\n      <span onClick={onOpen}>{children}</span>\r\n      \r\n       \r\n\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader\r\n          fontSize=\"35px\"\r\n          fontFamily=\"Work sans\"\r\n          d=\"flex\"\r\n          justifyContent=\"center\">Create Group CHat</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody  d=\"flex\" flexDir=\"column\" alignItems=\"center\">\r\n          <FormControl>\r\n              <Input placeholder=\"Chat Name\"mb={3}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n            {/* slected Users */}\r\n            {/* get selected users */}\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme='blue'  onClick={handleSubmit}>\r\n              Create Chat\r\n            </Button>\r\n            \r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default GroupChatModal\r\n"]},"metadata":{},"sourceType":"module"}