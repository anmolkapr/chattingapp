{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\miscellanious\\\\updateGroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport { ViewIcon } from '@chakra-ui/icons';\nimport { Box, Button, IconButton, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport UserBadgeItem from '../userAvatar/UserBadgeItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateGroupChat = _ref => {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const [renameloading, setRenameLoading] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      d: {\n        base: \"flex\"\n      },\n      icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 50\n      }, this),\n      onClick: onOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: selectedChat.users.map(u => /*#__PURE__*/_jsxDEV(UserBadgeItem, {\n              user: u,\n              admin: selectedChat.groupAdmin,\n              handleFunction: () => handleRemove(u)\n            }, u._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateGroupChat, \"S93vfGmbf3YLJu3AO7nptD9n0ic=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = UpdateGroupChat;\nexport default UpdateGroupChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGroupChat\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/miscellanious/updateGroupChatModal.js"],"names":["ViewIcon","Box","Button","IconButton","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","useToast","React","useState","ChatState","UserBadgeItem","UpdateGroupChat","fetchAgain","setFetchAgain","renameloading","setRenameLoading","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedChat","setSelectedChat","user","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","base","chatName","users","map","u","groupAdmin","handleRemove","_id"],"mappings":"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","sourcesContent":["import { ViewIcon } from '@chakra-ui/icons'\r\nimport { Box, Button, IconButton, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { ChatState } from '../../Context/ChatProvider';\r\nimport UserBadgeItem from '../userAvatar/UserBadgeItem';\r\n\r\nconst UpdateGroupChat = ({fetchAgain,setFetchAgain}) => {\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const { selectedChat, setSelectedChat, user } = ChatState();\r\n    const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n    return (\r\n        <>\r\n          <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n    \r\n          <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader fontSize=\"35px\" fontFamily=\"Work sans\" d=\"flex\"\r\n              justifyContent=\"center\">{selectedChat.chatName}</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <Box>{selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}</Box>\r\n              </ModalBody>\r\n    \r\n              <ModalFooter>\r\n                <Button colorScheme='blue' mr={3} onClick={onClose}>\r\n                  Close\r\n                </Button>\r\n              \r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </Modal>\r\n        </>\r\n      )\r\n    \r\n}\r\n\r\nexport default UpdateGroupChat\r\n"]},"metadata":{},"sourceType":"module"}