{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\Context\\\\ChatProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useConst } from \"@chakra-ui/react\";\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContext = /*#__PURE__*/createContext();\n\nconst ChatProvider = children => {\n  _s();\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n    if (!userInfo) history.push(\"/\");\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      selectedChat,\n      setSelectedChat,\n      user,\n      setUser,\n      notification,\n      setNotification,\n      chats,\n      setChats\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChatProvider, \"hT6C72rcbfRUedrDq+TPaFfRI/M=\");\n\n_c = ChatProvider;\nexport const ChatState = () => {\n  _s2();\n\n  return useContext(ChatContext);\n};\n\n_s2(ChatState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = ChatState;\nexport default ChatProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatProvider\");\n$RefreshReg$(_c2, \"ChatState\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/Context/ChatProvider.js"],"names":["useConst","createContext","useContext","ChatContext","ChatProvider","children","user","setUser","useState","useEffect","userInfo","JSON","parse","localStorage","getItem","history","push","selectedChat","setSelectedChat","notification","setNotification","chats","setChats","ChatState"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;;AAEA,MAAMG,YAAY,GAAKC,QAAD,IAAa;AAAA;;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,EAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjB;AACAP,IAAAA,OAAO,CAACG,QAAD,CAAP;AAEA,QAAI,CAACA,QAAL,EAAeK,OAAO,CAACC,IAAR,CAAa,GAAb;AAChB,GALM,EAKJ,CAACD,OAAD,CALI,CAAT;AAQA,sBAAO,QAAC,WAAD,CAAa,QAAb;AACL,IAAA,KAAK,EAAE;AACLE,MAAAA,YADK;AAELC,MAAAA,eAFK;AAGLZ,MAAAA,IAHK;AAILC,MAAAA,OAJK;AAKLY,MAAAA,YALK;AAMLC,MAAAA,eANK;AAOLC,MAAAA,KAPK;AAQLC,MAAAA;AARK,KADF;AAAA,cAWFjB;AAXE;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CAzBD;;GAAMD,Y;;KAAAA,Y;AA2BN,OAAO,MAAMmB,SAAS,GAAG,MAAM;AAAA;;AAC3B,SAAOrB,UAAU,CAACC,WAAD,CAAjB;AACD,CAFI;;IAAMoB,S;;MAAAA,S;AAIb,eAAenB,YAAf","sourcesContent":["import { useConst } from \"@chakra-ui/react\";\r\nimport { createContext, useContext } from \"react\";\r\n\r\nconst ChatContext = createContext();\r\n\r\nconst ChatProvider = ((children) =>{\r\n\r\n    const [user, setUser] = useState();\r\n\r\n    useEffect(() => {\r\n        const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        setUser(userInfo);\r\n    \r\n        if (!userInfo) history.push(\"/\");\r\n      }, [history]);\r\n      \r\n\r\n    return <ChatContext.Provider\r\n      value={{\r\n        selectedChat,\r\n        setSelectedChat,\r\n        user,\r\n        setUser,\r\n        notification,\r\n        setNotification,\r\n        chats,\r\n        setChats,\r\n      }}>\r\n        {children}\r\n     </ChatContext.Provider>\r\n});\r\n\r\nexport const ChatState = () => {\r\n    return useContext(ChatContext);\r\n  };\r\n  \r\nexport default ChatProvider;"]},"metadata":{},"sourceType":"module"}