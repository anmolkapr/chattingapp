{"ast":null,"code":"var _jsxFileName = \"C:\\\\CHATAPP\\\\frontend\\\\src\\\\components\\\\miscellanious\\\\updateGroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport { ViewIcon } from '@chakra-ui/icons';\nimport { Box, Button, FormControl, IconButton, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport UserBadgeItem from '../userAvatar/UserBadgeItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateGroupChat = _ref => {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const [renameloading, setRenameLoading] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const handleRemove = () => {};\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n  };\n\n  const handleSearch = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      d: {\n        base: \"flex\"\n      },\n      icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 50\n      }, this),\n      onClick: onOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          d: \"flex\",\n          justifyContent: \"center\",\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            d: \"flex\",\n            flexWrap: \"wrap\",\n            pb: 3,\n            children: selectedChat.users.map(u => /*#__PURE__*/_jsxDEV(UserBadgeItem, {\n              user: u,\n              admin: selectedChat.groupAdmin,\n              handleFunction: () => handleRemove(u)\n            }, u._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            d: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Chat Name\",\n              mb: 3,\n              value: groupChatName,\n              onChange: e => setGroupChatName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"solid\",\n              colorScheme: \"teal\",\n              ml: 1,\n              isLoading: renameloading,\n              onClick: handleRename,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Add User to group\",\n              mb: 1,\n              onChange: e => handleSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleRemove(user),\n            colorScheme: \"red\",\n            children: \"Leave Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateGroupChat, \"S93vfGmbf3YLJu3AO7nptD9n0ic=\", false, function () {\n  return [useDisclosure, useToast];\n});\n\n_c = UpdateGroupChat;\nexport default UpdateGroupChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGroupChat\");","map":{"version":3,"sources":["C:/CHATAPP/frontend/src/components/miscellanious/updateGroupChatModal.js"],"names":["ViewIcon","Box","Button","FormControl","IconButton","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","useDisclosure","useToast","React","useState","ChatState","UserBadgeItem","UpdateGroupChat","fetchAgain","setFetchAgain","renameloading","setRenameLoading","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedChat","setSelectedChat","user","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","handleRemove","handleRename","handleSearch","base","chatName","users","map","u","groupAdmin","_id","e","target","value"],"mappings":"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","sourcesContent":["import { ViewIcon } from '@chakra-ui/icons'\r\nimport { Box, Button, FormControl, IconButton, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, useDisclosure, useToast } from '@chakra-ui/react'\r\nimport React, { useState } from 'react'\r\nimport { ChatState } from '../../Context/ChatProvider';\r\nimport UserBadgeItem from '../userAvatar/UserBadgeItem';\r\n\r\nconst UpdateGroupChat = ({fetchAgain,setFetchAgain}) => {\r\n  const [renameloading, setRenameLoading] = useState(false);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const { selectedChat, setSelectedChat, user } = ChatState();\r\n    const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const toast = useToast();\r\n\r\n  const handleRemove = () => {\r\n\r\n  }\r\n  const handleRename = async() => {\r\n    if (!groupChatName) return;\r\n\r\n  }\r\n\r\n  const handleSearch = () => {\r\n\r\n  }\r\n    return (\r\n        <>\r\n          <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\r\n    \r\n          <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n              <ModalHeader fontSize=\"35px\" fontFamily=\"Work sans\" d=\"flex\"\r\n              justifyContent=\"center\">{selectedChat.chatName}</ModalHeader>\r\n              <ModalCloseButton />\r\n              <ModalBody>\r\n                <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>{selectedChat.users.map((u) => (\r\n                <UserBadgeItem\r\n                  key={u._id}\r\n                  user={u}\r\n                  admin={selectedChat.groupAdmin}\r\n                  handleFunction={() => handleRemove(u)}\r\n                />\r\n              ))}</Box>\r\n              <FormControl d=\"flex\">\r\n              <Input\r\n                placeholder=\"Chat Name\"\r\n                mb={3}\r\n                value={groupChatName}\r\n                onChange={(e) => setGroupChatName(e.target.value)}\r\n              />\r\n              <Button variant=\"solid\" colorScheme=\"teal\" ml={1}\r\n                isLoading={renameloading}\r\n                 onClick={handleRename}\r\n              >\r\n                Update\r\n              </Button>\r\n            </FormControl>\r\n            <FormControl>\r\n              <Input\r\n                placeholder=\"Add User to group\"\r\n                mb={1}\r\n                onChange={(e) => handleSearch(e.target.value)}\r\n              />\r\n            </FormControl>\r\n              </ModalBody>\r\n    \r\n              <ModalFooter>\r\n              <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\r\n              Leave Group\r\n            </Button>\r\n              \r\n              </ModalFooter>\r\n            </ModalContent>\r\n          </Modal>\r\n        </>\r\n      )\r\n    \r\n}\r\n\r\nexport default UpdateGroupChat\r\n"]},"metadata":{},"sourceType":"module"}