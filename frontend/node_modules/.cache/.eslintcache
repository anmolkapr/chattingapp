[{"C:\\CHATAPP\\frontend\\src\\index.js":"1","C:\\CHATAPP\\frontend\\src\\App.js":"2","C:\\CHATAPP\\frontend\\src\\Pages\\HomePage.js":"3","C:\\CHATAPP\\frontend\\src\\Pages\\ChatPage.js":"4","C:\\CHATAPP\\frontend\\src\\components\\authentication\\Signup.js":"5","C:\\CHATAPP\\frontend\\src\\components\\authentication\\Login.js":"6","C:\\CHATAPP\\frontend\\src\\Context\\ChatProvider.js":"7","C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\SideDrawer.js":"8","C:\\CHATAPP\\frontend\\src\\components\\Chatbox.js":"9","C:\\CHATAPP\\frontend\\src\\components\\MyChats.js":"10","C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\ProfileModal.js":"11","C:\\CHATAPP\\frontend\\src\\components\\chatLoading.js":"12","C:\\CHATAPP\\frontend\\src\\components\\userAvatar\\userListItem.js":"13","C:\\CHATAPP\\frontend\\src\\config\\chatLogics.js":"14","C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\GroupChatModal.js":"15","C:\\CHATAPP\\frontend\\src\\components\\userAvatar\\UserBadgeItem.js":"16","C:\\CHATAPP\\frontend\\src\\components\\singleChats.js":"17","C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\updateGroupChatModal.js":"18","C:\\CHATAPP\\frontend\\src\\components\\ScrollableChat.js":"19"},{"size":468,"mtime":1647152671992,"results":"20","hashOfConfig":"21"},{"size":404,"mtime":1645078263900,"results":"22","hashOfConfig":"21"},{"size":1536,"mtime":1646850082413,"results":"23","hashOfConfig":"21"},{"size":809,"mtime":1646980785965,"results":"24","hashOfConfig":"21"},{"size":5789,"mtime":1645191102647,"results":"25","hashOfConfig":"21"},{"size":3376,"mtime":1646849725292,"results":"26","hashOfConfig":"21"},{"size":839,"mtime":1646848904102,"results":"27","hashOfConfig":"21"},{"size":5507,"mtime":1646728824214,"results":"28","hashOfConfig":"21"},{"size":626,"mtime":1646982799119,"results":"29","hashOfConfig":"21"},{"size":3090,"mtime":1646981010234,"results":"30","hashOfConfig":"21"},{"size":1663,"mtime":1646720427005,"results":"31","hashOfConfig":"21"},{"size":610,"mtime":1646726122668,"results":"32","hashOfConfig":"21"},{"size":814,"mtime":1646848716297,"results":"33","hashOfConfig":"21"},{"size":1464,"mtime":1647154368296,"results":"34","hashOfConfig":"21"},{"size":5362,"mtime":1646978101787,"results":"35","hashOfConfig":"21"},{"size":614,"mtime":1647099074972,"results":"36","hashOfConfig":"21"},{"size":5661,"mtime":1647177182634,"results":"37","hashOfConfig":"21"},{"size":7379,"mtime":1647153386259,"results":"38","hashOfConfig":"21"},{"size":1615,"mtime":1647154783524,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1o5vsk0",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\CHATAPP\\frontend\\src\\index.js",[],[],["100","101"],"C:\\CHATAPP\\frontend\\src\\App.js",[],[],"C:\\CHATAPP\\frontend\\src\\Pages\\HomePage.js",[],[],"C:\\CHATAPP\\frontend\\src\\Pages\\ChatPage.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\authentication\\Signup.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\authentication\\Login.js",[],[],"C:\\CHATAPP\\frontend\\src\\Context\\ChatProvider.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\SideDrawer.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\Chatbox.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\MyChats.js",["102"],[],"import { AddIcon } from '@chakra-ui/icons';\r\nimport { Box, Button, Stack, Text, useToast } from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getSender } from '../config/chatLogics';\r\nimport { ChatState } from '../Context/ChatProvider';\r\nimport ChatLoading from \"./chatLoading\";\r\nimport GroupChatModal from './miscellanious/GroupChatModal';\r\n\r\nconst MyChats = ({fetchAgain}) => {\r\n  const [loggedUser, setLoggedUser] = useState();\r\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\r\n  const toast = useToast();\r\n  \r\n\r\n  const fetchChats = async () => {\r\n    // console.log(user._id);\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.get(\"/api/chat\", config);\r\n      console.log(data);\r\n      setChats(data);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error Occured!\",\r\n        description: \"Failed to Load the chats\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  };\r\n   \r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n    fetchChats();\r\n  }, [fetchAgain]);\r\n\r\n  return (\r\n    <Box\r\n    d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\r\n    flexDir=\"column\"\r\n    alignItems=\"center\"\r\n    p={3}\r\n    bg=\"white\"\r\n    w={{ base: \"100%\", md: \"31%\" }}\r\n    borderRadius=\"lg\"\r\n    borderWidth=\"1px\"\r\n  \r\n  Box>\r\n     <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\" }}\r\n        fontFamily=\"Work sans\"\r\n        d=\"flex\"\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >My CHATS\r\n      <GroupChatModal>\r\n      <Button\r\n            d=\"flex\"\r\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\r\n            rightIcon={<AddIcon />}\r\n          >\r\n            New Group Chat\r\n          </Button>\r\n      </GroupChatModal>\r\n        </Box>\r\n        <Box\r\n        d=\"flex\"\r\n        flexDir=\"column\"\r\n        p={3}\r\n        bg=\"#F8F8F8\"\r\n        w=\"100%\"\r\n        h=\"100%\"\r\n        borderRadius=\"lg\"\r\n        overflowY=\"hidden\"\r\n      >\r\n        \r\n        {chats?(\r\n          <Stack overflowY=\"scroll\">\r\n              {chats.map((chat) => (\r\n              <Box\r\n                onClick={() => setSelectedChat(chat)}\r\n                cursor=\"pointer\"\r\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n                color={selectedChat === chat ? \"white\" : \"black\"}\r\n                px={3}\r\n                py={2}\r\n                borderRadius=\"lg\"\r\n                key={chat._id}\r\n              >\r\n                 <Text>\r\n                  {!chat.isGroupChat\r\n                    ? getSender(loggedUser, chat.users)\r\n                    : chat.chatName}\r\n                </Text>\r\n                </Box>))}\r\n          </Stack>\r\n\r\n        ):(\r\n          <ChatLoading/>\r\n        )}\r\n        </Box></Box>\r\n  )\r\n}\r\n\r\nexport default MyChats\r\n","C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\ProfileModal.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\chatLoading.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\userAvatar\\userListItem.js",["103"],[],"import { Avatar, Box, Text } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { ChatState } from '../../Context/ChatProvider'\r\n\r\nconst userListItem = ({user,handleFunction}) => {\r\n \r\n  return (\r\n    <Box\r\n    onClick={handleFunction}\r\n    cursor=\"pointer\"\r\n    bg=\"#E8E8E8\"\r\n    _hover={{\r\n      background: \"#38B2AC\",\r\n      color: \"white\",\r\n    }}\r\n    w=\"100%\"\r\n    d=\"flex\"\r\n    alignItems=\"center\"\r\n    color=\"black\"\r\n    px={3}\r\n    py={2}\r\n    mb={2}\r\n    borderRadius=\"lg\"\r\n  >\r\n    <Avatar\r\n      mr={2}\r\n      size=\"sm\"\r\n      cursor=\"pointer\"\r\n      name={user.name}\r\n      src={user.pic}\r\n    />\r\n    <Box>\r\n      <Text>{user.name}</Text>\r\n      <Text fontSize=\"xs\">\r\n        <b>Email : </b>\r\n        {user.email}\r\n      </Text>\r\n    </Box>\r\n  </Box>\r\n  )\r\n}\r\n\r\nexport default userListItem\r\n","C:\\CHATAPP\\frontend\\src\\config\\chatLogics.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\GroupChatModal.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\userAvatar\\UserBadgeItem.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\singleChats.js",["104","105","106"],[],"C:\\CHATAPP\\frontend\\src\\components\\miscellanious\\updateGroupChatModal.js",[],[],"C:\\CHATAPP\\frontend\\src\\components\\ScrollableChat.js",[],[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":43,"column":6,"nodeType":"113","endLine":43,"endColumn":18,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":10,"nodeType":"117","messageId":"118","endLine":3,"endColumn":19},{"ruleId":"115","severity":1,"message":"119","line":22,"column":10,"nodeType":"117","messageId":"118","endLine":22,"endColumn":25},{"ruleId":"111","severity":1,"message":"120","line":64,"column":10,"nodeType":"113","endLine":64,"endColumn":12,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":115,"column":6,"nodeType":"113","endLine":115,"endColumn":20,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["126"],"no-unused-vars","'ChatState' is defined but never used.","Identifier","unusedVar","'socketConnected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["127"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"135","text":"136"},"Update the dependencies array to be: [user]",{"range":"137","text":"138"},"Update the dependencies array to be: [fetchMessages, selectedChat]",{"range":"139","text":"140"},[1293,1305],"[fetchAgain, fetchChats]",[2139,2141],"[user]",[3098,3112],"[fetchMessages, selectedChat]"]